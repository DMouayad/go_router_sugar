// GENERATED CODE - DO NOT MODIFY BY HAND
// Generated by go_router_sugar
// ignore_for_file: type=lint, unused_import, directives_ordering

import 'package:flutter/material.dart';
import 'package:go_router/go_router.dart';

import 'package:go_router_sugar_example/pages/about_page.dart';
import 'package:go_router_sugar_example/pages/animated_page.dart';
import 'package:go_router_sugar_example/pages/home_page.dart';
import 'package:go_router_sugar_example/pages/main_page.dart';
import 'package:go_router_sugar_example/pages/premium_page.dart';
import 'package:go_router_sugar_example/pages/products/[id]_page.dart';
import 'package:go_router_sugar_example/pages/products/list_page.dart';
import 'package:go_router_sugar_example/pages/user/profile/settings_page.dart';

/// Generated route constants
abstract class Routes {
  /// Route: /about
  static const String about = '/about';

  /// Route: /animated
  static const String animated = '/animated';

  /// Route: /home
  static const String home = '/home';

  /// Route: /main
  static const String main = '/main';

  /// Route: /premium
  static const String premium = '/premium';

  /// Route: /products/:id
  static const String productsid = '/products/:id';

  /// Route: /products/list
  static const String productslist = '/products/list';

  /// Route: /user/profile/settings
  static const String userprofilesettings = '/user/profile/settings';
}

/// Auto-generated router configuration
class AppRouter {
  AppRouter._();

  /// The configured GoRouter instance
  static final GoRouter instance = GoRouter(
    routes: <RouteBase>[
      GoRoute(
        path: '/about',
        builder: (BuildContext context, GoRouterState state) {
          return const AboutPage();
        },
      ),
      GoRoute(
        path: '/animated',
        builder: (BuildContext context, GoRouterState state) {
          return const AnimatedPage();
        },
      ),
      GoRoute(
        path: '/home',
        builder: (BuildContext context, GoRouterState state) {
          return const HomePage();
        },
      ),
      GoRoute(
        path: '/main',
        builder: (BuildContext context, GoRouterState state) {
          return const MainPage();
        },
      ),
      GoRoute(
        path: '/premium',
        builder: (BuildContext context, GoRouterState state) {
          return const PremiumPage();
        },
      ),
      GoRoute(
        path: '/products/:id',
        builder: (BuildContext context, GoRouterState state) {
          return ProductsIdPage(
            id: state.pathParameters['id'] ?? '',
          );
        },
      ),
      GoRoute(
        path: '/products/list',
        builder: (BuildContext context, GoRouterState state) {
          return const ProductsListPage();
        },
      ),
      GoRoute(
        path: '/user/profile/settings',
        builder: (BuildContext context, GoRouterState state) {
          return const UserProfileSettingsPage();
        },
      ),
    ],
  );

  /// Access the router configuration
  static GoRouter get router => instance;
}

/// Type-safe navigation helpers
extension AppRouterNavigation on GoRouter {
  /// Navigate to /about
  void goToAbout() {
    go('/about');
  }

  /// Navigate to /about
  void pushToAbout() {
    push('/about');
  }

  /// Navigate to /animated
  void goToAnimated() {
    go('/animated');
  }

  /// Navigate to /animated
  void pushToAnimated() {
    push('/animated');
  }

  /// Navigate to /home
  void goToHome() {
    go('/home');
  }

  /// Navigate to /home
  void pushToHome() {
    push('/home');
  }

  /// Navigate to /main
  void goToMain() {
    go('/main');
  }

  /// Navigate to /main
  void pushToMain() {
    push('/main');
  }

  /// Navigate to /premium
  void goToPremium() {
    go('/premium');
  }

  /// Navigate to /premium
  void pushToPremium() {
    push('/premium');
  }

  /// Navigate to /products/:id
  void goToProductsid({required String id}) {
    go('/products/:id'.replaceAll(':id', id));
  }

  /// Navigate to /products/:id
  void pushToProductsid({required String id}) {
    push('/products/:id'.replaceAll(':id', id));
  }

  /// Navigate to /products/list
  void goToProductslist() {
    go('/products/list');
  }

  /// Navigate to /products/list
  void pushToProductslist() {
    push('/products/list');
  }

  /// Navigate to /user/profile/settings
  void goToUserprofilesettings() {
    go('/user/profile/settings');
  }

  /// Navigate to /user/profile/settings
  void pushToUserprofilesettings() {
    push('/user/profile/settings');
  }
}

/// Static navigation helpers
class Navigate {
  Navigate._();

  /// Navigate to /about
  static void goToAbout() {
    AppRouter.instance.go('/about');
  }

  /// Navigate to /about
  static void pushToAbout() {
    AppRouter.instance.push('/about');
  }

  /// Navigate to /animated
  static void goToAnimated() {
    AppRouter.instance.go('/animated');
  }

  /// Navigate to /animated
  static void pushToAnimated() {
    AppRouter.instance.push('/animated');
  }

  /// Navigate to /home
  static void goToHome() {
    AppRouter.instance.go('/home');
  }

  /// Navigate to /home
  static void pushToHome() {
    AppRouter.instance.push('/home');
  }

  /// Navigate to /main
  static void goToMain() {
    AppRouter.instance.go('/main');
  }

  /// Navigate to /main
  static void pushToMain() {
    AppRouter.instance.push('/main');
  }

  /// Navigate to /premium
  static void goToPremium() {
    AppRouter.instance.go('/premium');
  }

  /// Navigate to /premium
  static void pushToPremium() {
    AppRouter.instance.push('/premium');
  }

  /// Navigate to /products/:id
  static void goToProductsid({required String id}) {
    AppRouter.instance.go('/products/:id'.replaceAll(':id', id));
  }

  /// Navigate to /products/:id
  static void pushToProductsid({required String id}) {
    AppRouter.instance.push('/products/:id'.replaceAll(':id', id));
  }

  /// Navigate to /products/list
  static void goToProductslist() {
    AppRouter.instance.go('/products/list');
  }

  /// Navigate to /products/list
  static void pushToProductslist() {
    AppRouter.instance.push('/products/list');
  }

  /// Navigate to /user/profile/settings
  static void goToUserprofilesettings() {
    AppRouter.instance.go('/user/profile/settings');
  }

  /// Navigate to /user/profile/settings
  static void pushToUserprofilesettings() {
    AppRouter.instance.push('/user/profile/settings');
  }
}
